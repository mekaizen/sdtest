pipeline {
    agent {
        docker {
         //   image 'docker:latest' // Using Docker to manage containers
            image 'alpine:latest'
            args '--privileged -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        SONAR_TOKEN = credentials('SONAR_TOKEN')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/mekaizen/sdtest.git'
            }
        }

        stage('Build with Maven') {
            steps {
                script {
                    // Run Maven inside a separate container
                    docker.image('maven:3.9.8-eclipse-temurin-21').inside {
                        sh 'mvn clean package'
                    }
                }
            }
        }

        stage('Run Application') {
            steps {
                script {
                    // Build and run your application from your existing Dockerfile
                    sh '''
                        docker build -t doc18/sdlc-app .
                        docker run -d --name app -p 8084:8084 doc18/sdlc-app
                    '''
                }
            }
        }

        stage('Install curl') {
            steps {
                // Install curl on the fly
                sh 'apk update && apk add curl'
            }
        }


        stage('Verify Application Running') {
            steps {
                script {
                    sh '''
                        curl -I http://localhost:8084 || {
                            echo "Application is not running!"
                       
                        }
                    '''
                }
            }
        }

        stage('ZAP Security Scan') {
            steps {
                script {
                    // Run ZAP security scan against the running application
                    sh '''
                        docker run --network host zaproxy/zap-stable zap-baseline.py -t http://localhost:8084 -r zap-report.html
                    '''
                }
            }
        }

        stage('Post ZAP Scan Actions') {
            steps {
                archiveArtifacts artifacts: 'zap-report.html', allowEmptyArchive: true
            }
        }
    }

    post {
        success {
            echo 'Build, test, and ZAP scan passed'
        }
        failure {
            echo 'Build failed'
        }
        always {
            script {
                sh '''
                    docker stop app && docker rm app
                '''
            }
        }
    }
}
